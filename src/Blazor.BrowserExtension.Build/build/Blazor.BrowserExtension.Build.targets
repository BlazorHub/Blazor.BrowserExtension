<!-- build/Blazor.BrowserExtension.Build.targets -->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- this will automatically run before the 'BeforeBuild' target -->
  <Target Name="RunBootstrapBlazorToBrowserExtension" BeforeTargets="BeforeBuild" Condition="'$(BrowserExtensionBootstrap)' == 'true'">

    <PropertyGroup>
      <BrowserExtensionBuildContentsPath>$(MSBuildThisFileDirectory)..\content</BrowserExtensionBuildContentsPath>
      <BrowserExtensionProjectFilePath>$(ProjectPath)</BrowserExtensionProjectFilePath>
      <BrowserExtensionProjectPath>$(ProjectDir)</BrowserExtensionProjectPath>
      <BrowserExtensionProjectAssetsPath>$(BrowserExtensionProjectPath)$(BrowserExtensionAssetsPath)</BrowserExtensionProjectAssetsPath>
      <BrowserExtensionProjectPagesPath>$(BrowserExtensionProjectPath)Pages</BrowserExtensionProjectPagesPath>

      <BrowserExtensionBuildManifestFilePath>$(BrowserExtensionBuildContentsPath)\manifest.json</BrowserExtensionBuildManifestFilePath>
      <BrowserExtensionProjectAssetsManifestFilePath>$(BrowserExtensionProjectAssetsPath)\manifest.json</BrowserExtensionProjectAssetsManifestFilePath>
      <BrowserExtensionProjectAssetsIndexHtmlFilePath>$(BrowserExtensionProjectAssetsPath)\index.html</BrowserExtensionProjectAssetsIndexHtmlFilePath>
      <BrowserExtensionProjectPagesIndexRazorFilePath>$(BrowserExtensionProjectPagesPath)\Index.razor</BrowserExtensionProjectPagesIndexRazorFilePath>
      <BrowserExtensionBuildBackgroundRazorFilePath>$(BrowserExtensionBuildContentsPath)\Background.razor</BrowserExtensionBuildBackgroundRazorFilePath>
      <BrowserExtensionProjectPagesBackgroundRazorFilePath>$(BrowserExtensionProjectPagesPath)\Background.razor</BrowserExtensionProjectPagesBackgroundRazorFilePath>
      <BrowserExtensionProjectProgramCsFilePath>$(BrowserExtensionProjectPath)Program.cs</BrowserExtensionProjectProgramCsFilePath>
    </PropertyGroup>

    <Message Importance="high" Text="Bootstrapping Blazor application as Browser Extension" />

    <Message Importance="high" Text="Creating default manifest.json file in '$(BrowserExtensionProjectAssetsManifestFilePath)'" />
    <Copy SourceFiles="$(BrowserExtensionBuildManifestFilePath)" DestinationFiles="$(BrowserExtensionProjectAssetsManifestFilePath)" ContinueOnError="true" SkipUnchangedFiles="true" />

    <Message Importance="high" Text="Bootstrapping project file '$(ProjectPath)'" />
    <BlazorToBrowserExtensionBootstrapFile FilePath="$(ProjectPath)" FileType="Project"></BlazorToBrowserExtensionBootstrapFile>

    <!-- Make sure this build includes the wwwroot directory to copy to output directory -->
    <ItemGroup>
      <None Include="wwwroot\**\*" CopyToOutputDirectory="Always" />
    </ItemGroup>
    
    <Message Importance="high" Text="Bootstrapping index.html file '$(BrowserExtensionProjectAssetsIndexHtmlFilePath)'" />
    <BlazorToBrowserExtensionBootstrapFile FilePath="$(BrowserExtensionProjectAssetsIndexHtmlFilePath)" FileType="IndexHtml"></BlazorToBrowserExtensionBootstrapFile>

    <Message Importance="high" Text="Bootstrapping Index.razor file '$(BrowserExtensionProjectPagesIndexRazorFilePath)'" />
    <BlazorToBrowserExtensionBootstrapFile FilePath="$(BrowserExtensionProjectPagesIndexRazorFilePath)" FileType="IndexRazor"></BlazorToBrowserExtensionBootstrapFile>

    <Message Importance="high" Text="Creating default Background.razor file in '$(BrowserExtensionProjectPagesBackgroundRazorFilePath)'" />
    <Copy SourceFiles="$(BrowserExtensionBuildBackgroundRazorFilePath)" DestinationFiles="$(BrowserExtensionProjectPagesBackgroundRazorFilePath)" ContinueOnError="true" SkipUnchangedFiles="true" />

    <!-- Make sure this build includes the newly created Background.razor -->
    <ItemGroup>
      <Content Include="Pages/Background.razor" CopyToOutputDirectory="Never" />
    </ItemGroup>

    <Message Importance="high" Text="Bootstrapping Program.cs file '$(BrowserExtensionProjectProgramCsFilePath)'" />
    <BlazorToBrowserExtensionBootstrapFile FilePath="$(BrowserExtensionProjectProgramCsFilePath)" FileType="ProgramCs"></BlazorToBrowserExtensionBootstrapFile>

    <Message Importance="high" Text="Bootstrapping completed from Blazor application to Blazor Browser Extension application" />

  </Target>

  <!-- this will automatically run after the 'AfterBuild' target -->
  <Target Name="RunBuildBlazorToBrowserExtension" AfterTargets="AfterBuild" Condition="'$(BuildBlazorToBrowserExtension)' == 'true'">

    <PropertyGroup>
      <OriginalBlazorProjectOutputFrameworkPath>$(TargetDir)$(BrowserExtensionAssetsPath)\_framework</OriginalBlazorProjectOutputFrameworkPath>
      <BlazorProjectOutputFrameworkPath>$(TargetDir)$(BrowserExtensionAssetsPath)\framework</BlazorProjectOutputFrameworkPath>
      <BlazorProjectOutputManifestJsonFile>$(TargetDir)$(BrowserExtensionAssetsPath)\manifest.json</BlazorProjectOutputManifestJsonFile>
      <BlazorProjectOutputTargetPath>$(TargetDir)$(BrowserExtensionAssetsPath)</BlazorProjectOutputTargetPath>
      <BlazorProjectStaticWebAssetsPath>$(IntermediateOutputPath)staticwebassets</BlazorProjectStaticWebAssetsPath>
      <BlazorProjectStaticWebAssetsFile>$(ProjectName).StaticWebAssets.xml</BlazorProjectStaticWebAssetsFile>
    </PropertyGroup>

    <Message Importance="high" Text="Converting Blazor application to Browser Extension" />

    <Message Importance="high" Text="Validating Browser Extension manifest.json" />
    <BlazorToBrowserExtensionValidateManifest FileName="$(BlazorProjectOutputManifestJsonFile)" />

    <Message Importance="high" Text="Removing all existing files in '$(BlazorProjectOutputFrameworkPath)'" />
    <ItemGroup>
      <BlazorProjectFilesToDelete Include="$(BlazorProjectOutputFrameworkPath)\**\*.*" />
    </ItemGroup>
    <Delete Files="@(BlazorProjectFilesToDelete)" TreatErrorsAsWarnings="true" />

    <Message Importance="high" Text="Moving all files from '$(OriginalBlazorProjectOutputFrameworkPath)' to '$(BlazorProjectOutputFrameworkPath)'" />
    <ItemGroup>
      <BlazorProjectFilesToMove Include="$(OriginalBlazorProjectOutputFrameworkPath)\**\*.*" />
    </ItemGroup>
    <Move SourceFiles="@(BlazorProjectFilesToMove)" DestinationFolder="$(BlazorProjectOutputFrameworkPath)\%(RecursiveDir)" />

    <Message Importance="high" Text="Removing directory '$(OriginalBlazorProjectOutputFrameworkPath)'" />
    <RemoveDir Directories="$(OriginalBlazorProjectOutputFrameworkPath)" />

    <Message Importance="high" Text="Replacing content of 'blazor.webassembly.js' and 'dotnet.*.js'" />
    <BlazorToBrowserExtensionSafeNamespace Input="$(ProjectName)" Replacement="_">
      <Output TaskParameter="Output" PropertyName="BlazorProjectSafeProjectName" />
    </BlazorToBrowserExtensionSafeNamespace>
    <ItemGroup>
      <BlazorProjectBlazorJsFile Include="$(BlazorProjectOutputFrameworkPath)\blazor.webassembly.js" />
      <BlazorProjectReplaceBlazorJsFileContents Include="append element to document body">
        <From>document.body.appendChild</From>
        <To>globalThis.BlazorBrowserExtension.$(BlazorProjectSafeProjectName).AppendElementToDocumentAsync</To>
      </BlazorProjectReplaceBlazorJsFileContents>
      <BlazorProjectReplaceBlazorJsFileContents Include="framework path">
        <From>_framework</From>
        <To>framework</To>
      </BlazorProjectReplaceBlazorJsFileContents>
      <BlazorProjectReplaceBlazorJsFileContents Include="fetch url">
        <From>fetch(</From>
        <To>globalThis.BlazorBrowserExtension.$(BlazorProjectSafeProjectName).FetchAsync(</To>
      </BlazorProjectReplaceBlazorJsFileContents>
      <BlazorProjectReplaceBlazorJsFileContents Include="Module cwrap">
        <From>cwrap(</From>
        <To>globalThis.Module.cwrap(</To>
      </BlazorProjectReplaceBlazorJsFileContents>
      <BlazorProjectReplaceBlazorJsFileContents Include="Module addRunDependency">
        <From>addRunDependency(</From>
        <To>globalThis.Module.addRunDependency(</To>
      </BlazorProjectReplaceBlazorJsFileContents>
      <BlazorProjectReplaceBlazorJsFileContents Include="Module removeRunDependency">
        <From>removeRunDependency(</From>
        <To>globalThis.Module.removeRunDependency(</To>
      </BlazorProjectReplaceBlazorJsFileContents>
      <BlazorProjectDotnetJsFile Include="$(BlazorProjectOutputFrameworkPath)\dotnet.*.js" />
      <BlazorProjectReplaceDotnetJsFileContents Include="fetch url">
        <From>fetch(</From>
        <To>globalThis.BlazorBrowserExtension.$(BlazorProjectSafeProjectName).FetchAsync(</To>
      </BlazorProjectReplaceDotnetJsFileContents>
      <BlazorProjectReplaceDotnetJsFileContents Include="module reference">
        <From>Module!=="undefined"?Module</From>
        <To>globalThis.Module!=="undefined"?globalThis.Module</To>
      </BlazorProjectReplaceDotnetJsFileContents>
      <BlazorProjectReplaceDotnetJsFileContents Include="MONO declaration">
        <From>var MONO=</From>
        <To>globalThis.MONO=</To>
      </BlazorProjectReplaceDotnetJsFileContents>
      <BlazorProjectReplaceDotnetJsFileContents Include="BINDING declaration">
        <From>var BINDING=</From>
        <To>globalThis.BINDING=</To>
      </BlazorProjectReplaceDotnetJsFileContents>
      <BlazorProjectReplaceDotnetJsFileContents Include="accessing mono_wasm_assembly_already_added" Condition="'$(TargetFramework)' == 'net5.0'">
        <From>this.mono_wasm_assembly_already_added</From>
        <To>globalThis.mono_wasm_assembly_already_added</To>
      </BlazorProjectReplaceDotnetJsFileContents>
      <BlazorProjectReplaceDotnetJsFileContents Include="accessing mono_set_timeout_exec">
        <From>this.mono_set_timeout_exec</From>
        <To>globalThis.mono_set_timeout_exec</To>
      </BlazorProjectReplaceDotnetJsFileContents>
    </ItemGroup>
    <BlazorToBrowserExtensionReplaceContent Files="@(BlazorProjectBlazorJsFile)" Replace="@(BlazorProjectReplaceBlazorJsFileContents)" />
    <BlazorToBrowserExtensionReplaceContent Files="@(BlazorProjectDotnetJsFile)" Replace="@(BlazorProjectReplaceDotnetJsFileContents)" />

    <ItemGroup>
      <BlazorProjectStaticWebAssetsManifestFiles Include="$(BlazorProjectStaticWebAssetsPath)\$(BlazorProjectStaticWebAssetsFile)" />
    </ItemGroup>
    <Message Importance="high" Text="Processing static web assets from manifest files '@(BlazorProjectStaticWebAssetsManifestFiles, ', ')'" />
    <BlazorToBrowserExtensionProcessStaticWebAssetsManifest Input="@(BlazorProjectStaticWebAssetsManifestFiles)" Exclude="$(BlazorProjectOutputTargetPath)">
      <Output TaskParameter="Output" ItemName="BlazorProjectStaticWebAssetFiles" />
    </BlazorToBrowserExtensionProcessStaticWebAssetsManifest>

    <Message Importance="high" Text="Copying static web asset files from '@(BlazorProjectStaticWebAssetFiles, ', ')'" />
    <Copy SourceFiles="@(BlazorProjectStaticWebAssetFiles)" DestinationFolder="$(BlazorProjectOutputTargetPath)\%(BlazorProjectStaticWebAssetFiles.ContentRelativeDirectory)" SkipUnchangedFiles="true" />

    <Message Importance="high" Text="Conversion completed from Blazor application to Browser Extension" />

  </Target>

</Project>